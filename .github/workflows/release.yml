name: 自动构建与发布
on:
  push:
    tags: v*

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      # 步骤1：拉取主仓库和子模块
      - name: 拉取代码（含子模块）
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      # 步骤2：获取子模块版本信息和仓库路径
      - name: 获取版本信息
        id: version-info
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          
          # 获取后端信息
          cd backend
          BACKEND_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "unknown")
          BACKEND_REPO=$(git remote get-url origin | sed 's|git@github.com:||; s|\.git$||')
          cd ..
          
          # 获取前端信息
          cd frontend
          FRONTEND_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "unknown")
          FRONTEND_REPO=$(git remote get-url origin | sed 's|git@github.com:||; s|\.git$||')
          cd ..
          
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
          echo "BACKEND_TAG=$BACKEND_TAG" >> $GITHUB_ENV
          echo "FRONTEND_TAG=$FRONTEND_TAG" >> $GITHUB_ENV
          echo "BACKEND_REPO=$BACKEND_REPO" >> $GITHUB_ENV
          echo "FRONTEND_REPO=$FRONTEND_REPO" >> $GITHUB_ENV

      # 步骤3：打包完整代码
      - name: 创建完整代码包
        run: |
          mkdir -p package
          rsync -av --progress \
            --exclude='.git' \
            --exclude='.github' \
            --exclude='*.DS_Store' \
            --exclude='package' \
            ./ package/
          mv package auth-matrix
          zip -r auth-matrix.zip auth-matrix

      # 步骤4：生成带链接的发布说明
      - name: 生成发布说明
        run: |
          cat << EOF > release-body.md
          ## 🚀 Auth-Matrix ${{ env.TAG_NAME }}
          
          ### 📦 组件版本信息
          | 模块   | 版本       | 发布链接 |
          |--------|------------|----------|
          | 后端   | ${{ env.BACKEND_TAG }} | [查看](${{ env.BACKEND_REPO }}/releases/tag/${{ env.BACKEND_TAG }}) |
          | 前端   | ${{ env.FRONTEND_TAG }} | [查看](${{ env.FRONTEND_REPO }}/releases/tag/${{ env.FRONTEND_TAG }}) |

          ## 🔻 代码获取方式
          ### 方式一：完整包下载
          直接下载右侧 auth-matrix.zip（已包含所有子模块的代码，无需手动下载）

          ### 方式二：精准版本克隆
          \`\`\`bash
          # 克隆项目，两种中任意一种（包含子模块）
          git clone --branch ${{ env.TAG_NAME }} --recursive https://github.com/thirty30ww/auth-matrix.git # 克隆项目，http方式
          git clone --branch ${{ env.TAG_NAME }} --recursive git@github.com:thirty30ww/auth-matrix.git # 克隆项目，ssh方式
          \`\`\`
          EOF

      # 步骤5：创建 Release
      - name: 创建 Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG_NAME }}
          name: "Auth-Matrix ${{ env.TAG_NAME }}"
          body_path: release-body.md
          files: auth-matrix.zip
          generate_release_notes: false